AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Manage SSL Certificates using Certbot in Lambda

Parameters:
  CertbotBucket:
    Type: String
    Description: Name of the S3 bucket

  DomainEmail:
    Type: String
    Description: Email address for certificate management

  DomainList:
    Type: String
    Description: Comma-separated list of domains for Certbot

  CertRenewDays:
    Type: Number
    Description: Number of days before certificate expiration for renewal

  CertbotEnvironment:
    Type: String
    Description: Additional environment variables for Certbot

  CertbotObject:
    Type: String
    Description: Additional environment variables for Certbot

Resources:
  CertbotCron:
    Type: AWS::Serverless::Function
    Properties:
      Description: Manage SSL Certificates using Certbot in Lambda
      Handler: lambda_function.lambda_handler
      Runtime: python3.10
      MemorySize: 512
      Timeout: 60
      Architectures:
        - x86_64
      Policies:
        - S3FullAccessPolicy:
            BucketName: "*"
      Environment:
        Variables:
          CERTBOT_BUCKET: !Ref CertbotBucket
          DOMAINS_EMAIL: !Ref DomainEmail
          DOMAINS_LIST: !Ref DomainList
          CERTS_RENEW_DAYS_BEFORE_EXPIRATION: !Ref CertRenewDays
          CERTBOT_ENV: !Ref CertbotEnvironment
          CERTBOT_OBJECT: !Ref CertbotObject
      Events:
        CertbotEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)

      # Attach the custom IAM policy to the Lambda function's IAM role
      Policies:
        - !Ref CertbotS3Permissions  # Reference to the CertbotS3Permissions IAM policy

  CertbotS3Permissions:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CertbotS3PermissionsPolicy
      Roles:
        - !GetAtt CertbotCron.Role  # Reference to the Lambda function's IAM role
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:DeleteObject
            Resource: "*"
